plugins {
    id "com.jfrog.bintray" version "1.3.1"
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'jacoco'

group = 'org.elasticsearch.kafka.consumer'
version = release + '.' + build
//version = '${buildId}.${buildNumber}'

description = """kafka-elasticsearch-consumer"""
def artifact_provider_url       = hasProperty('artifact_provider_url') ? artifact_provider_url : System.getenv('artifact_provider_url')
def artifact_provider_user      = hasProperty('artifact_provider_user') ? artifact_provider_user : System.getenv('artifact_provider_user')
def artifact_provider_org       = hasProperty('artifact_provider_org') ? artifact_provider_org : System.getenv('artifact_provider_org')
def artifact_provider_secret    = hasProperty('artifact_provider_secret') ? artifact_provider_secret : System.getenv('artifact_provider_secret')
sourceCompatibility = 1.8
targetCompatibility = 1.8



repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.elasticsearch', name: 'elasticsearch', version: '1.5.1'
    compile group: 'org.apache.kafka', name: 'kafka_2.10', version: '0.8.2.1'
    compile group: 'com.netflix.curator', name: 'curator-framework', version: '1.0.1'
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.3'
    compile group: 'org.scala-lang', name: 'scala-library', version: '2.10.0'
    compile(group: 'log4j', name: 'log4j', version: '1.2.16') {
        exclude(module: 'mail')
        exclude(module: 'jms')
        exclude(module: 'jmxtools')
        exclude(module: 'jmxri')
    }
    compile group: 'org.xerial.snappy', name: 'snappy-java', version: '1.0.4.1'
    compile(group: 'org.apache.zookeeper', name: 'zookeeper', version: '3.3.4') {
        exclude(module: 'log4j')
        exclude(module: 'jline')
    }
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.3'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.3'
    compile group: 'org.codehaus.janino', name: 'janino', version: '2.7.8'
    compile group: 'junit', name: 'junit', version: '4.12'
}

processResources {
    filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [version: project.version])
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

jar {
	from files(sourceSets.main.output.classesDir)
    exclude 'config'
    exclude 'log4j.xml'
    exclude '*.template'
    manifest {
        attributes("Implementation-Title": "kafka-elasticsearch-consumer", "Implementation-Version": version)
		attributes 'Main-class':'org.elasticsearch.kafka.indexer.KafkaIndexerDriver'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

bintray {
    user = artifact_provider_user
    key = artifact_provider_secret
    pkg {
        repo = 'bigdatadevs-repo'
        name = 'elasticsearch-kafka-consumer'
        userOrg = artifact_provider_org
        licenses = ['AGPL-V3']
        vcsUrl = artifact_provider_url
        version {
            name = '0.0.2'
            desc = 'Current version'
            released  = new Date()
            vcsTag = '0.0.2'
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
    configurations = ['archives']
}


